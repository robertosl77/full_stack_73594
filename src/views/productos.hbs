<div class="container-sm mt-3">
  <div class="row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 row-cols-xxl-5 g-3 mb-3">
    {{#each productos}}
    <div class="col">
      <div class="card h-100 rounded-3 p-3 text-center shadow position-relative">
        {{#if (gt descuento 0)}}
        <div class="descuento position-absolute bg-warning rounded-2 text-black fw-bold fs-6 px-2 py-1">{{descuento}}% OFF</div>
        {{/if}}
        <img src="/{{imagen}}" class="card-img-top" alt="{{titleCase nombre}}">
        <div class="card-body d-flex flex-column">
          <h5 class="card-title mb-0">{{titleCase nombre}}</h5>
          <p class="card-text text-secondary fs-6 mb-0">{{titleCase bodega}}</p>
          <p class="mb-0">{{titleCase tipo}}</p>
          <p class="card-text fw-bold fs-5 mb-1">
            {{#if (gt descuento 0)}}
            <small class="text-decoration-line-through text-danger" style="font-size: 0.75rem;">${{precioOriginalFormateado}}</small>
            ${{precioDescuento}}
            {{else}}
            ${{precioOriginalFormateado}}
            {{/if}}
          </p>

          {{#unless ../esSoloVista}}
          <div class="acciones-producto">
            <p class="card-text text-success fs-6">Disponibles: {{stock}}</p>
            <div class="mb-2">
              <label for="cantidad{{_id}}">Cantidad:</label>
              <input type="number" id="cantidad{{_id}}" min="1" max="{{stock}}" value="1" {{#unless (gt stock 0)}}disabled{{/unless}}>
            </div>
            <div class="text-danger small mb-2" id="error-stock-{{_id}}" style="display: none;"></div>
            <button
              class="btn btn-primary agregar-carrito w-100 mt-auto btn-agregar-carrito"
              data-id="{{_id}}"
              data-nombre="{{nombre}}"
              data-precio="{{precio}}"
              {{#unless (gt stock 0)}}disabled style="background:gray;cursor:not-allowed;"{{/unless}}>
              {{#unless (gt stock 0)}}Sin stock{{else}}AGREGAR{{/unless}}
            </button>
          </div>
          {{/unless}}

        </div>
      </div>
    </div>
    {{/each}}
  </div>
</div>

{{> modalCarrito}}

<script>
  // Forma segura de pasar el valor booleano a JavaScript
  const SoloVista = {{#if esSoloVista}}true{{else}}false{{/if}};
  //console.log('SoloVista:', SoloVista); // Para debugging
</script>

<script>
document.addEventListener("DOMContentLoaded", function () {
  // Solo ejecutar el cÃ³digo del carrito si no es solo vista
  if (!SoloVista) {
    const botonesAgregar = document.querySelectorAll(".btn-agregar-carrito");

    botonesAgregar.forEach(boton => {
      boton.addEventListener("click", async () => {
        const id = boton.dataset.id;
        const cantidadInput = document.querySelector(`#cantidad${id}`);
        const cantidad = parseInt(cantidadInput?.value || "1", 10);
        const max = parseInt(cantidadInput?.max, 10);
        const min = parseInt(cantidadInput?.min, 10);
        const errorDiv = document.querySelector(`#error-stock-${id}`);

        if (cantidad < min || cantidad > max) {
          if (errorDiv) {
            errorDiv.textContent = `La cantidad debe estar entre ${min} y ${max}.`;
            errorDiv.style.display = "block";
            setTimeout(() => {
              errorDiv.style.display = "none";
            }, 3000);
          }
          cantidadInput.value = Math.max(min, Math.min(cantidad, max));
          return;
        }

        try {
          const res = await fetch("/integrador2/carrito", {
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({ productoId: id, cantidad })
          });

          const data = await res.json();

          if (res.ok) {
            const r = await fetch("/integrador2/carrito/cantidad");
            const json = await r.json();
            const cartContainer = document.querySelector("#cart-wrapper");
            const cartCount = document.querySelector("#cart-count");

            if (cartContainer) cartContainer.style.display = "inline-block";
            if (cartCount) cartCount.textContent = json.cantidad;
          }

        } catch (error) {
          console.error("Fallo al agregar al carrito", error);
        }
      });
    });
  } else {
    console.log('Usuario con rol de solo vista - funcionalidad de carrito deshabilitada');
  }
});
</script>